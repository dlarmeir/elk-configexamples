input {
  udp {
    port => 514
    type => syslog
  }
}

filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "%{CISCOTIMESTAMP}:%{SPACE}%{NOTSPACE:HOSTNAME}%{SPACE}%{WORD:G1}%{SPACE}\<%{DATA:GROUPNAME}\>%{SPACE}%{WORD:U1}%{SPACE}\<%{DATA:USERNAME}\>%{SPACE}%{WORD:IP}%{SPACE}\<%{DATA:SRC_IP}\>%{SPACE}%{WORD:C1}%{SPACE}%{WORD:C2}:%{SPACE}%{GREEDYDATA:CLIENT}" }
      add_field => [ "received_at", "%{@timestamp}" ]
    }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss.SSS", "MMM dd HH:mm:ss.SSS" ]
      timezone => "UTC"
    }
    #if "_grokparsefailure" in [tags] {
    #        drop { }
  #}
}

geoip {
  source => "SRC_IP"
  target => "geoip"
  database =>"/var/db/GeoIP/GeoLite2-City.mmdb"
  add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
  add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}" ]
}

mutate {
  convert => [ "[geoip][coordinates]", "float" ]
  lowercase => [ "protocol" ]
}
}

output {
  elasticsearch { hosts => ["your-elk-host:9200"]
  index => "vpn-production"
 }

 file {
   codec => line {
   format => "%{[message]}"
   }
   path => "/root/test.log"
   }
}